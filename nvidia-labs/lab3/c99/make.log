pgc++ -Minfo=accel main.cpp -o main.exe
pgc++ -fast -Minfo=accel main.cpp -o main-fast.exe
pgc++ -acc -Minfo=accel main.cpp -o main-acc.exe
allocate_vector(vector &, unsigned int):
      5, include "vector.h"
          14, Accelerator clause: upper bound for dimension 0 of array 'v' is unknown
              Generating enter data copyin(v[:1])
              Generating enter data create(v->coefs[:n])
free_vector(vector &):
      5, include "vector.h"
          19, Generating exit data delete(v[:1],v->coefs[:1])
initialize_vector(vector &, double):
      5, include "vector.h"
          28, Generating update device(v->coefs[:v->n])
dot(const vector &, const vector &):
      6, include "vector_functions.h"
          13, Generating present(ycoefs[:],xcoefs[:])
          14, Loop is parallelizable
              Generating Tesla code
              14, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */
              15, Generating implicit reduction(+:sum)
waxpby(double, const vector &, double, const vector &, const vector &):
      6, include "vector_functions.h"
          28, Generating present(wcoefs[:],ycoefs[:],xcoefs[:])
          29, Loop is parallelizable
              Generating Tesla code
              29, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */
allocate_3d_poisson_matrix(matrix &, int):
      7, include "matrix.h"
          58, Accelerator clause: upper bound for dimension 0 of array 'A' is unknown
              Generating enter data copyin(A[:1],A->row_offsets[:num_rows+1],A->coefs[:nnz],A->cols[:nnz])
free_matrix(matrix &):
      7, include "matrix.h"
          67, Generating exit data delete(A->coefs[:1],A->cols[:1],A[:1],A->row_offsets[:1])
matvec(const matrix &, const vector &, const vector &):
      8, include "matrix_functions.h"
          15, Generating present(cols[:],Acoefs[:],row_offsets[:],ycoefs[:],xcoefs[:])
          17, Loop is parallelizable
              Generating Tesla code
              17, #pragma acc loop gang, worker(32) /* blockIdx.x threadIdx.y */
              22, #pragma acc loop vector(32) /* threadIdx.x */
                  Vector barrier inserted for vector loop reduction
                  Vector barrier inserted due to potential dependence out of a vector loop
              26, Generating implicit reduction(+:sum)
              31, Vector barrier inserted due to potential dependence into a vector loop
          22, Loop is parallelizable
pgc++ -acc -fast -Minfo=accel main.cpp -o main-acc-fast.exe
allocate_vector(vector &, unsigned int):
      5, include "vector.h"
          14, Accelerator clause: upper bound for dimension 0 of array 'v' is unknown
              Generating enter data copyin(v[:1])
              Generating enter data create(v->coefs[:n])
free_vector(vector &):
      5, include "vector.h"
          19, Generating exit data delete(v[:1],v->coefs[:1])
initialize_vector(vector &, double):
      5, include "vector.h"
          28, Generating update device(v->coefs[:v->n])
dot(const vector &, const vector &):
      6, include "vector_functions.h"
          13, Generating present(ycoefs[:],xcoefs[:])
          14, Loop is parallelizable
              Generating Tesla code
              14, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */
              15, Generating implicit reduction(+:sum)
waxpby(double, const vector &, double, const vector &, const vector &):
      6, include "vector_functions.h"
          28, Generating present(wcoefs[:],ycoefs[:],xcoefs[:])
          29, Loop is parallelizable
              Generating Tesla code
              29, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */
allocate_3d_poisson_matrix(matrix &, int):
      7, include "matrix.h"
          58, Accelerator clause: upper bound for dimension 0 of array 'A' is unknown
              Generating enter data copyin(A[:1],A->row_offsets[:num_rows+1],A->coefs[:nnz],A->cols[:nnz])
free_matrix(matrix &):
      7, include "matrix.h"
          67, Generating exit data delete(A->coefs[:1],A->cols[:1],A[:1],A->row_offsets[:1])
matvec(const matrix &, const vector &, const vector &):
      8, include "matrix_functions.h"
          15, Generating present(cols[:],Acoefs[:],row_offsets[:],ycoefs[:],xcoefs[:])
          17, Loop is parallelizable
              Generating Tesla code
              17, #pragma acc loop gang, worker(32) /* blockIdx.x threadIdx.y */
              22, #pragma acc loop vector(32) /* threadIdx.x */
                  Vector barrier inserted for vector loop reduction
                  Vector barrier inserted due to potential dependence out of a vector loop
              26, Generating implicit reduction(+:sum)
              31, Vector barrier inserted due to potential dependence into a vector loop
          22, Loop is parallelizable
pgc++ -acc -fast -ta=nvidia:cc70,managed -Minfo=accel main.cpp -o main-managed.exe
allocate_vector(vector &, unsigned int):
      5, include "vector.h"
          14, Accelerator clause: upper bound for dimension 0 of array 'v' is unknown
              Generating enter data copyin(v[:1])
              Generating enter data create(v->coefs[:n])
free_vector(vector &):
      5, include "vector.h"
          19, Generating exit data delete(v[:1],v->coefs[:1])
initialize_vector(vector &, double):
      5, include "vector.h"
          28, Generating update device(v->coefs[:v->n])
dot(const vector &, const vector &):
      6, include "vector_functions.h"
          13, Generating present(xcoefs[:],ycoefs[:])
          14, Loop is parallelizable
              Generating Tesla code
              14, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */
              15, Generating implicit reduction(+:sum)
waxpby(double, const vector &, double, const vector &, const vector &):
      6, include "vector_functions.h"
          28, Generating present(wcoefs[:],ycoefs[:],xcoefs[:])
          29, Loop is parallelizable
              Generating Tesla code
              29, #pragma acc loop gang, vector(128) /* blockIdx.x threadIdx.x */
allocate_3d_poisson_matrix(matrix &, int):
      7, include "matrix.h"
          58, Accelerator clause: upper bound for dimension 0 of array 'A' is unknown
              Generating enter data copyin(A[:1],A->row_offsets[:num_rows+1],A->coefs[:nnz],A->cols[:nnz])
free_matrix(matrix &):
      7, include "matrix.h"
          67, Generating exit data delete(A->coefs[:1],A->cols[:1],A[:1],A->row_offsets[:1])
matvec(const matrix &, const vector &, const vector &):
      8, include "matrix_functions.h"
          15, Generating present(cols[:],Acoefs[:],row_offsets[:],ycoefs[:],xcoefs[:])
          17, Loop is parallelizable
              Generating Tesla code
              17, #pragma acc loop gang, worker(32) /* blockIdx.x threadIdx.y */
              22, #pragma acc loop vector(32) /* threadIdx.x */
                  Vector barrier inserted for vector loop reduction
                  Vector barrier inserted due to potential dependence out of a vector loop
              26, Generating implicit reduction(+:sum)
              31, Vector barrier inserted due to potential dependence into a vector loop
          22, Loop is parallelizable
